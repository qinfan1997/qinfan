library(Hmisc)

#“otu_table.txt” 是一个微生物丰度表
otu <- read.delim('otu_table.txt', row.name = 1, check.names = FALSE)

otu1 <- otu
otu1[otu1>0] <- 1
otu <- otu[which(rowSums(genus1) >= 4), ]    #只保留在 4 个及以上样本中出现的otu
#计算两个otu之间是否存在丰度变化的相关性，以 spearman 相关系数为例
otu_corr <- rcorr(t(otu), type = 'spearman')
 
#阈值筛选
#将 spearman 相关系数低于 0.5 的关系剔除，即 r>=0.5
r <- otu_corr$r
r[abs(r) < 0.5] <- 0
 
#选取显著性 p 值小于 0.05 的相关系数，即 p<0.05
p <- otu_corr$P
p <- p.adjust(p, method = 'BH')    #可选 p 值校正，这里使用 BH 法校正 p 值
p[p>=0.05] <- -1
p[p<0.05 & p>=0] <- 1
p[p==-1] <- 0
 
#根据上述筛选的 r 值和 p 值保留数据
z <- r * p
diag(z) <- 0    #将相关矩阵中对角线中的值（代表了自相关）转为 0
 
#如此便得到了邻接矩阵格式的网络文件（微生物otu的相关系数矩阵）
write.table(data.frame(z, check.names = FALSE), 'otu_corr.matrix.txt', col.names = NA, sep = '\t', quote = FALSE)

##获得网络
library(igraph)
 
#将邻接矩阵转化为 igraph 网络的邻接列表
#构建含权的无向网络，权重代表了微生物属间丰度的 spearman 相关系数
g <- graph.adjacency(z, weighted = TRUE, mode = 'undirected')
g
 
#自相关也可以通过该式去除
g <- simplify(g)
 
#孤立节点的删除（删除度为 0 的节点）
g <- delete.vertices(g, names(degree(g)[degree(g) == 0]))
 
#该模式下，边权重代表了相关系数
#由于权重通常为正值，因此最好取个绝对值，相关系数重新复制一列
E(g)$correlation <- E(g)$weight
E(g)$weight <- abs(E(g)$weight)
 
#为节点（otu）添加属性信息（界门纲目科属水平注释）
#“otu_taxonomyD6_D12.txt” 记录了微生物的属性，读入该表后根据已知网络节点匹配对应的行
tax <- read.delim('otu_taxonomyD6_D12.txt', row.name = 1, check.names = FALSE, stringsAsFactors = FALSE)

tax <- tax[as.character(V(g)$name), ]
 
V(g)$kingdom <- tax$kingdom
V(g)$phylum <- tax$phylum
V(g)$class <- tax$class
V(g)$order <- tax$order
V(g)$family <- tax$family
V(g)$genus <- tax$genus
 
#查看网络图
g
plot(g)

##网络文件输出，输出特定的网络文件类型，便于后续数据分析需求
#邻接矩阵，出了上述提到的在计算相关系数后，输出筛选后的相关系数矩阵外
#还可以由 igraph 的邻接列表转换
adj_matrix <- as.matrix(get.adjacency(g, attr = 'correlation'))
write.table(data.frame(adj_matrix, check.names = FALSE), 'network.adj_matrixD6_D12.txt', col.names = NA, sep = '\t', quote = FALSE)
 
#边列表
edge <- data.frame(as_edgelist(g))    #igraph 的邻接列表转为边列表
 
edge_list <- data.frame(
    source = edge[[1]],
    target = edge[[2]],
    weight = E(g)$weight,
    correlation = E(g)$correlation
)
head(edge_list)

write.table(edge_list, 'network.edge_listD6_D12.txt', sep = '\t', row.names = FALSE, quote = FALSE)

#节点属性列表
node_list <- data.frame(
    label = names(V(g)),
    kingdom = V(g)$kingdom,
    phylum = V(g)$phylum,
    class = V(g)$class,
    order = V(g)$order,
    family = V(g)$family
)
head(node_list)

write.table(node_list, 'network.node_listD6_D12.txt', sep = '\t', row.names = FALSE, quote = FALSE)
